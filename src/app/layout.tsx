import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import BaseApp, { getStaticProps as baseAppProps } from "@/app/[locale]/components/base_app/base-app";
import { ChakraThemeProvider } from "@/app/[locale]/providers/chakra";
import { SummaryProvider } from "@/app/[locale]/providers/summaryProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const { props } = await baseAppProps();

  // Providing all messages to the client
  // side is the easiest way to get started

  return (
    <html suppressHydrationWarning lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      {/*<ColorModeScript initialColorMode={theme.config.initialColorMode} />
          <ChakraThemeProvider>
            <SummaryProvider>
              <BaseApp props={props}>
              {children}
              </BaseApp>
            </SummaryProvider>
          </ChakraThemeProvider>*/}
      {children}
      </body>
    </html>
  );
}
// export { baseAppProps };
